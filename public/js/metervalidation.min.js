let analysisIndex,meterData=[],reviewedModels=[],replaceData=[];const d=new Date;let updateModelStart,updateModelEnd;$(document).ready(()=>{const a=$(".datepicker");a.datepicker({changeYear:!0,dateFormat:"yy-mm-dd"}),$(".load").on("click",function(){$("#overlay").fadeIn()});const b=new Date(d.getFullYear(),d.getMonth()+1,1);d===b&&$.ajax({url:"/deleteModels",type:"DELETE"});const c=()=>{$.when($.ajax({url:"/getAlarm",type:"POST",data:{startTimestamp:new Date(d.getFullYear(),d.getMonth()-1,1).toISOString().slice(0,10),endTimestamp:new Date(d.getFullYear(),d.getMonth(),0).toISOString().slice(0,10),steward:$("#filter-steward").val()}}),$.ajax({url:"/reviewedModels",type:"GET"})).then((a,b)=>{if("Request failed with status code 504"===a[0]||"Request failed with status code 500"===a[0])c();else{console.log(b),$(".meterSelectionSpinner").hide(),$(".apply").html("Apply");const c=a[0].body.meter,d=a[0].body.flag_count,e=a[0].body.building_abbreviation,f=a[0].body.building_number,g=a[0].body.commodity_tag;c.map((a,b)=>{$(".meterList").append(`
            <tr>
            <td style="width: 10px;" class='position text-center'><input class="form-check-input" type="radio" name="meterSelect" id="radioNoLabel1" aria-label="Select a meter"></td>
            <td>${e[b]}</td>
            <td>${a}</td>
            <td>${d[b]}</td>
            <td id=${a}>No</td>
            <td style="display: none">${f[b]}</td>
            <td style="display: none">${g[b]}</td>
            </tr>`)}),b[0].map(a=>{$(`#${a.meter}`).text("Yes"),$(`#${a.meter}`).parent("tr").css("background-color","#00b74a"),reviewedModels.push(a.meter)});const h=(a,b)=>a.cells[b].textContent;$(".meterList tr").get().sort((c,a)=>h(c,1).localeCompare(h(a,1))||h(c,2).localeCompare(h(a,2))).map(a=>$(".meterList").append(a)),$("#search").on("keyup",function(){const a=$(this).val().toUpperCase();$(".meterList tr").each(function(){$row=$(this),$row.find("td").each(function(){const b=$(this).text();return 0===b.indexOf(a)?($row.show(),!1):void $row.hide()})})}),$(".reviewedFilter").on("change",function(){const a=$(this).val();$(".meterData tbody tr").each(function(){"No"===a?($(this).find("td:eq(4):contains(No)").closest("tr").show(),$(this).find("td:eq(4):contains(Yes)").closest("tr").hide()):"Yes"===a?($(this).find("td:eq(4):contains(No)").closest("tr").hide(),$(this).find("td:eq(4):contains(Yes)").closest("tr").show()):($(this).find("td:eq(4):contains(No)").closest("tr").show(),$(this).find("td:eq(4):contains(Yes)").closest("tr").show())})}),$(".remove0").on("change",function(){const a=$(this).val();$(".meterData tbody tr").each(function(){"Yes"===a?$(this).find("td:eq(3):contains(0)").closest("tr").hide():$(this).find("td:eq(3):contains(0)").closest("tr").show()})})}})};c(),$(".filterBySteward").on("click",function(){$(".ring").show(),$(".meterData").load(location.href+" .meterData"),c()});const e=()=>{$.ajax({url:"/postModels",type:"POST",data:{building:$(".currentBuildingName").text(),meter:$(".currentMeter").text()}}).then(()=>{$(".reviewed").html(`Reviewed <i class="far fa-check-circle"></i>`),$(".reviewed").attr("disabled",!0),$(".reviewed").addClass("btn-success"),$(`#${$(".currentMeter").text()}`).text("Yes"),$(`#${$(".currentMeter").text()}`).closest("tr").css("background-color","#00b74a")})};$(".modelStart").on("change",function(){const a=$(this).datepicker("getDate");a.setDate(a.getDate()+364),$(".modelEnd").datepicker("setDate",a)}),$(".meterData").on("change",$("input[name=\"meterSelect\"]"),function(){meterData=[]}),$(".confirmMeter").click(function(){$(".modelStart").datepicker("setDate",new Date(d.getFullYear()-1,d.getMonth()-1,1)),$(".modelEnd").datepicker("setDate",new Date(d.getFullYear()-1,d.getMonth()-1,364)),$(".analysisStart").datepicker("setDate",new Date(d.getFullYear(),d.getMonth()-1,1)),$(".analysisEnd").datepicker("setDate",new Date(d.getFullYear(),d.getMonth(),0)),$("input[name=\"meterSelect\"]:checked",$(".meterData")).each(function(){meterData.push({meter:$(this).closest("tr").children("td:eq(2)").text(),building_number:$(this).closest("tr").children("td:eq(5)").text(),commodity_tag:$(this).closest("tr").children("td:eq(6)").text()})}),$(".meterSelection").text(meterData[0].meter)}),$(".loadModel").on("click",function(a){a.preventDefault(),0===meterData.length?(alert("No meter selected. Please click \"Confirm Meter Selection\" to confirm your selected meter"),$("#overlay").hide()):($("#chartData").load(location.href+" #chartData"),$(".tableData").load(location.href+" .tableData"),$("#collapseRow").load(location.href+" #collapseRow"),f())});const f=function(){const a=new Date().toISOString().slice(0,10),b=new Date(d.getFullYear()-3,d.getMonth()-1,1).toISOString().slice(0,10),c=$(".modelStart").val(),g=$(".modelEnd").val(),h=$(".analysisStart").val(),i=$(".analysisEnd").val(),j=meterData[0].building_number,k=meterData[0].commodity_tag,l=meterData[0].meter;$.when($.ajax({url:"/getModel",method:"GET",data:{buildingNumber:j,commodity:k,meter:l,trainStart:c,trainEnd:g,analysisStart:h,analysisEnd:i},error:function(a){503===a.status&&(f(),$(".overlayMessage").text("Server not responding, trying your search again. Please do not refresh the page")),502===a.status&&($("#overlay").fadeOut(),alert("No data was returned for your current search criteria. Please try selecting a different meter or date range"))}}),$.ajax({url:"/getConsumption",method:"GET",data:{buildingNumber:j,commodity:k,meter:l,startTimestamp:b,endTimestamp:a}}),$.ajax({type:"POST",url:"/getAttributes",data:{meter:meterData[0].meter}})).then((a,b,d)=>{if(console.log(b),"Request failed with status code 504"===a[0]||"Request failed with status code 500"===a[0]||"Request failed with status code 503"===a[0]||"Request failed with status code 504"===b[0])f(),$(".overlayMessage").text("Server not responding, trying your search again. Please do not refresh the page");else{$(".displayData").show(),0===d[0].length?$(".savedAttributes").hide():($(".savedAttributes").show(),$(".savedBaseTemp").html(null===d[0][0].base_temperature?"--":d[0][0].base_temperature),$(".savedAutoIgnored").html(d[0][0].auto_ignored_percentage+"%"),$(".savedSlope").html(d[0][0].slope),$(".savedIntercept").html(d[0][0].intercept),$(".savedR2").html(d[0][0].r2),$(".savedStdDev").html(d[0][0].std),$(".savedStart").html(d[0][0].train_start),$(".savedEnd").html(d[0][0].train_end)),$(".reviewedButton").html(` <button style='margin-bottom: 20px;' type="button"
        class="btn btn-primary reviewed text-center">Reviewed</button>`),$(".reviewed").on("click",function(){reviewedModels.push(a[0].body.meter),e()}),reviewedModels.includes(a[0].body.meter)&&($(".reviewed").attr("disabled",!0),$(".reviewed").addClass("btn-success"),$(".reviewed").html("Reviewed <i class=\"far fa-check-circle\"></i>"));const f=a[0].body.model.data.timestamp.indexOf($(".analysisStart").val()),h=a[0].body.model.data.predicted_value_lower_bound.slice(f),i=a[0].body.model.data.average_dry_bulb_temperature.slice(f),j=a[0].body.model.data.predicted_value_upper_bound.slice(f),k=a[0].body.model.data.raw_value.slice(f),l=a[0].body.model.data.timestamp.slice(f);$(".overlayMessage").text("Getting data, this will take a few seconds"),$("#overlay").fadeOut(),$(".baseTemp").html(null===a[0].body.model.base_temperature?"--":a[0].body.model.base_temperature),$(".autoIgnored").html(parseFloat(a[0].body.model.missing_value.auto_ignored_percentage).toFixed(0)+"%"),$(".slope").html(parseFloat(a[0].body.model.slope).toFixed(2)),$(".intercept").html(parseFloat(a[0].body.model.intercept).toFixed(2)),$(".r2").html(parseFloat(a[0].body.model.max_train_r2).toFixed(2)),$(".stdDev").html(parseFloat(a[0].body.model.std.train).toFixed(2)),$(".start").html(c),$(".end").html(g),$(".meterVariable").html(a[0].body.model.x.toUpperCase()),$(".currentBuildingName").text(a[0].body.building.building_abbreviation),$(".currentMeter").text(a[0].body.meter),$(".currentCommodity").text(a[0].body.commodity.tag),$(".headerButton").show();const m=(a,b,c)=>{let d={};a.forEach((a,c)=>d[a]=b[c]);const e=Object.keys(d).map(function(a){return[c(a),d[a]]});return e.sort(function(c,a){return c[0]-a[0]}),e.map(b=>({x:b[0],y:b[1]}))};"W"===meterData[0].commodity_tag&&($("#hideIfWater").hide(),$("#fullWidth").attr("class","col-xxl-12"));const n={data:{datasets:[{type:"scatter",label:"Meter VS. Temp",data:m(i,k,Number),backgroundColor:"#00FFFF",pointRadius:5},{type:"line",label:"High Limit",data:m(i,j,Number),fill:!1,pointRadius:0,tension:.1,borderColor:"#d9534f"},{type:"line",label:"Low Limit",data:m(i,h,Number),fill:!1,pointRadius:0,tension:.1,borderColor:"#ffcc66"}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{labels:{color:"white"}}},scales:{y:{beginAtZero:!0,ticks:{color:"white"},grid:{color:"black"}},x:{ticks:{color:"white"},grid:{color:"black"}}}}},o=document.getElementById("myChart").getContext("2d"),p=new Chart(o,n),q={data:{datasets:[{type:"scatter",label:"Meter VS. Dates",data:m(l,k,String),pointRadius:5,backgroundColor:"#00FFFF"},{type:"line",label:"High Limit",data:m(l,j,String),fill:!1,pointRadius:0,borderColor:"#d9534f",tension:.1},{type:"line",label:"Low Limit",data:m(l,h,String),fill:!1,pointRadius:0,borderColor:"#ffcc66",tension:.1}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{labels:{color:"white"}}},scales:{x:{type:"time",time:{unit:"day",tooltipFormat:"MMM dd, yyyy"},ticks:{color:"white"},grid:{color:"black"}},y:{beginAtZero:!0,ticks:{color:"white"},grid:{color:"black"}}}}},r=document.getElementById("myChart2").getContext("2d"),s=new Chart(r,q),t={},u=b[0].body.timestamp,v=b[0].body.value;u.forEach((a,b)=>t[a]=v[b]);const w=Object.keys(t).map(function(a){return[a+"",t[a]]});google.load("visualization","1",{packages:["controls","charteditor"]}),google.setOnLoadCallback(function(){const a=new google.visualization.DataTable;a.addColumn("date"),a.addColumn("number"),w.forEach(b=>{a.addRow([new Date(b[0]),b[1]])});const b=new google.visualization.Dashboard(document.getElementById("dashboard")),c=new google.visualization.ControlWrapper({controlType:"ChartRangeFilter",containerId:"control_div",state:{range:{start:new Date($(".modelStart").val()),end:new Date($(".modelEnd").val())}},options:{filterColumnIndex:0,ui:{chartType:"ScatterChart",chartOptions:{height:"100",width:"90%",colors:["#15A0C8"],backgroundColor:{fill:"#48555F"},chartArea:{height:"100",width:"90%"},hAxis:{baselineColor:"#FFFFFF",gridlineColor:"#FFFFFF",textStyle:{color:"#FFF"}}}}}}),d=new google.visualization.ChartWrapper({chartType:"ScatterChart",containerId:"chart_div",options:{legend:"none",tooltip:{isHtml:!0,trigger:"hover"},pointSize:10,dataOpacity:1,colors:["#15A0C8"],vAxis:{baselineColor:"#000000",gridlineColor:"#000000",textStyle:{color:"#FFF"}},hAxis:{baselineColor:"#000000",gridlineColor:"#000000",textStyle:{color:"#FFF"}},height:600,width:1e3,backgroundColor:{fill:"#48555F"}}});(function(a){a.setOption("width","90%"),a.setOption("chartArea.width","90%")})(d),b.bind([c],[d]),$(".show-hide").on("click",function(){const c=this.querySelector("i"),d=this.querySelector("span");b.draw(a),c.classList.contains("fa-eye")?(c.classList.remove("fa-eye"),c.classList.add("fa-eye-slash"),d.innerHTML="Hide Historic"):(c.classList.remove("fa-eye-slash"),c.classList.add("fa-eye"),d.innerHTML="Show Historic")}),google.visualization.events.addListener(c,"statechange",function(){const a=c.getState();return document.getElementById("dbgchart").innerHTML=a.range.start.toISOString().slice(0,10)+" to "+a.range.end.toISOString().slice(0,10),updateModelStart=a.range.start.toISOString().slice(0,10),updateModelEnd=a.range.end.toISOString().slice(0,10),0})}),$(".copyModelDates").on("click",()=>{$(".modelStart").val(updateModelStart),$(".modelEnd").val(updateModelEnd)}),$(function(){function b(a){let b=!1;a.shiftKey&&this.checked&&o.forEach(a=>{(a===this||a===p)&&(b=!b),b&&(a.checked=!0)}),p=this}const c=a[0].body.model.data.timestamp.slice(f),d=a[0].body.model.data.average_dry_bulb_temperature.slice(f),e=a[0].body.model.data.degree_day.slice(f),g=a[0].body.model.data.is_occupied.slice(f),h=a[0].body.model.data.raw_value.slice(f),i=a[0].body.model.data.predicted_value.slice(f),j=a[0].body.model.data.replacement_value.slice(f),k=a[0].body.model.data.replacement_reason.slice(f),l=a[0].body.model.data.replacement_notes.slice(f),m=a[0].body.model.data.predicted_value_lower_bound.slice(f),n=a[0].body.model.data.predicted_value_upper_bound.slice(f);c.map((a,b)=>{$(".tableBody").append(`
              <tr>
                <td class='position'><input class="form-check-input edit" name='edit' type="checkbox"></td>
                <td class='date'>${a}</td>
                <td>${d[b]}</td>
                <td>${"OCC"===$(".meterVariable").text()?g[b]:parseFloat(e[b]).toFixed(0)}</td>
                <td id=${Math.trunc(h[b])} class='meterReading'>${Math.trunc(h[b])}</td>
                <td class='expected'>${parseFloat(i[b]).toFixed(0)}</td>
                <td >${null===j[b]?"-":parseFloat(j[b]).toFixed(0)}</td>
                <td>${null===k[b]?"-":k[b]}</td>
                <td>${null===l[b]?"-":l[b]}</td>
                <td class="upperBound" style='display: none'>${parseFloat(n[b]).toFixed(0)}</td>
                <td class="lowerBound" style='display: none'>${parseFloat(m[b]).toFixed(0)}</td>
              </tr>`)}),$(".x").html(a[0].body.model.x.toUpperCase()),$(".tableData tbody tr").each(function(){const a=$(this).find(".meterReading").html(),b=$(this).find(".lowerBound").html(),c=$(this).find(".upperBound").html();(parseInt(a,10)<parseInt(b,10)||parseInt(a,10)===parseInt(b,10))&&($(this).css("background-color","#F0AD4E"),0===$(this).index()?$(this).children("td:eq(0)").append(`<a  href="#" class="warning firstRow" data-tool-tip="Low Limit: ${b}"><i class="fas fa-exclamation-circle fa-2x"></i></a>`):$(this).children("td:eq(0)").append(`<a  href="#" class="warning" data-tool-tip="Low Limit: ${b}"><i class="fas fa-exclamation-circle fa-2x"></i></a>`)),(parseInt(a,10)>parseInt(c,10)||parseInt(a,10)===parseInt(c,10))&&($(this).css("background-color","#d9534f"),0===$(this).index()?$(this).children("td:eq(0)").append(`<a  href="#" class="warning firstRow" data-tool-tip="High Limit: ${c}"><i class="fas fa-exclamation-circle fa-2x"></i></a>`):$(this).children("td:eq(0)").append(`<a  href="#" class="warning" data-tool-tip="High Limit: ${c}"><i class="fas fa-exclamation-circle fa-2x"></i></a>`)),$(this).children("td:eq(4)").text()===$(this).next().children("td:eq(4)").text()&&$(this).next().css("background-color","#0275d8")});const o=document.querySelectorAll(".tableData input[type=\"checkbox\"]");let p;o.forEach(a=>a.addEventListener("click",b))})}})};$(".copyAttributeDates").on("click",()=>{$(".modelStart").val($(".savedStart").html()),$(".modelEnd").val($(".savedEnd").html())}),$("#reason").on("change",function(){$("#submitReplacement").removeAttr("disabled")}),$("#submitReplacement").click(function(){$("input:checkbox:checked",$(".tableData")).each(function(){replaceData.push({Date:$(this).closest("tr").find(".date").text(),Expected:$(this).closest("tr").find(".expected").text(),index:$(this).closest("tr").index()})}).get();const a=$("#replace").is(":checked");let b=[],c=[],d=[],e=[];const f=meterData[0].building_number,g=meterData[0].commodity_tag,h=meterData[0].meter;0===replaceData.length?(alert("Please select at least one date"),$("#overlay").hide()):(!0===a?replaceData.forEach(function(a){""===$("#notes").val()?b.push(null):b.push($("#notes").val()),c.push($("#reason").val()),d.push(parseFloat(a.Expected)),e.push(a.Date)}):replaceData.forEach(function(a){""===$("#notes").val()?b.push(null):b.push($("#notes").val()),c.push($("#reason").val()),d.push(null),e.push(a.Date)}),$(".overlayMessage").text("Submitting Data. Please wait..."),$.ajax({url:"/postReplacement",method:"POST",data:{building_number:f,commodity_tag:g,meter:h,timestamp:JSON.stringify(e),values:JSON.stringify(d),reason:JSON.stringify(c),notes:JSON.stringify(b)},error:function(a){400===a.status&&(alert("Invalid Request. Please try again."),$("#overlay").fadeOut()),504===a.status&&($("#overlay").fadeOut(),$(".edit").prop("checked",!1),alert("Server Error. Your data has been saved. Please hit the submit button again."))}}).then(()=>{replaceData.forEach((a,e)=>{const f=$(`.tableData tbody tr:eq(${a.index})`),g=a=>f.children(`td:eq(${a})`);g(6).text(null===d[e]?"-":d[e]),g(7).text(c[e]),g(8).text(null===b[e]?"-":b[e])}),$("#overlay").fadeOut(),$(".overlayMessage").text("Getting data, this will take a few seconds"),b=[],e=[],d=[],c=[],replaceData=[],$(".edit").prop("checked",!1),$("#replace").prop("checked",!1),$("#notes").val(""),$("#reason").val("Choose..."),$(".successAlert").html(`<div class="alert alert-success alert-dismissible fade show" role="alert">
                    <strong>Success!</strong> Your data has been successfully uploaded!
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`),setTimeout(()=>{$(".successAlert").empty()},3e3)}))}),$(".logout").click(function(){g()}),$(".saveAttributes").on("click",function(){$(this).html(`<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
    <span class="visually-hidden">Loading...</span>`),g()});const g=()=>{const a=$(".autoIgnored").text();let b=a.substring(0,a.length-1);const c=$(".currentBuildingName").text(),d=$(".currentMeter").text(),e=$(".currentCommodity").text(),f=$(".meterVariable").text(),g=$(".baseTemp").text(),h=+$(".slope").text(),i=+$(".intercept").text(),j=+$(".r2").text(),k=+$(".stdDev").text(),l=$(".start").text(),m=$(".end").text();$.ajax({type:"POST",url:"/postAttributes",data:{building_number:c,meter:d,commodity_tag:e,train_start:l,train_end:m,x:f,auto_ignored_percentage:+b,base_temperature:g,r2:j,slope:h,intercept:i,std:k}}).then(()=>{$(".saveAttributes").html(`<i style="margin: 0 auto" class="far fa-check-circle fa-2x text-center"></i>`),setTimeout(()=>{$(".saveAttributes").html("Save")},4e3)})}});