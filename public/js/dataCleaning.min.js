let attributes,analysisIndex,data=[],replaceData=[];$(document).ready(()=>{$(function(){$("#slider-range").slider({range:!0,min:new Date("2010.01.01").getTime()/1e3,max:new Date("2014.01.01").getTime()/1e3,step:86400,values:[new Date("2013.01.01").getTime()/1e3,new Date("2013.02.01").getTime()/1e3],slide:function(a,b){$("#amount").val(new Date(1e3*b.values[0]).toDateString()+" - "+new Date(1e3*b.values[1]).toDateString())}}),$("#amount").val(new Date(1e3*$("#slider-range").slider("values",0)).toDateString()+" - "+new Date(1e3*$("#slider-range").slider("values",1)).toDateString())});const a=$(".datepicker");a.datepicker({changeYear:!0,dateFormat:"yy-mm-dd"}),$(".load").on("click",function(){$("#overlay").fadeIn()}),$(".modelStart").on("change",function(){let a=$(this).datepicker("getDate");a.setDate(a.getDate()+364),$(".modelEnd").datepicker("setDate",a)});let b=$("#table"),c=$("#table2"),d=$("#button"),e=$("#button3");$("#filterBy").on("change",function(){b.bootstrapTable("filterBy",{building_number:$(this).val()})}),$(".reset").on("click",function(){b.bootstrapTable("filterBy",{}),$("#filterBy").val("Filter By")}),$(function(){let a=!1;b.on("change",$("input[name=\"btSelectItem\"]"),function(){a=!0,data=[]}),d.click(function(){if(!1===a)alert("Please select a meter");else{let a=new Date,c=new Date,d=new Date,e=new Date;a.setDate(1),a.setMonth(a.getMonth()-1),a.setYear(a.getFullYear()-1),c.setDate(1),c.setMonth(c.getMonth()-1),c.setYear(c.getFullYear()-1),c.setDate(364),d.setDate(1),d.setMonth(d.getMonth()-1),e.setDate(0),e.setMonth(e.getMonth()),$(".modelStart").datepicker("setDate",a),$(".modelEnd").datepicker("setDate",c),$(".analysisStart").datepicker("setDate",d),$(".analysisEnd").datepicker("setDate",e),data.push(b.bootstrapTable("getSelections")),$(".disabled").attr("disabled",!1),$(".meterSelection").html(`${data[0][0].meter}`)}})}),$(".pointer").on("click",function(){$("#filterBy").empty();const a=$(this).text();$.ajax({type:"POST",url:"/buildings",data:{steward:a}}).then(function(b){console.log(b),$("#filterBy").append("<option selected disabled>Choose...</option>"),b.map(b=>{$("#filterBy").append(`<option value=${b.building_id}>${b.building}</option>`)}),$(".dropdown-toggle").text(a)})});const f=function(){const a={meter:$(".currentMeter").text()};$.ajax({type:"POST",url:"/getAttributes",data:a}).then(a=>{attributes=a,console.log(attributes)})};$(".apiGateway").on("click",function(a){a.preventDefault(),0===data.length?(alert("No meter selected. Please click \"Confirm Meter Selection\" to confirm your selected meter"),$("#overlay").hide()):(!0===h&&i(),$("#chartData").load(location.href+" #chartData"),$("#chartData2").load(location.href+" #chartData2"),$("#chartData3").load(location.href+" #chartData3"),$(".tableData").load(location.href+" .tableData"),g())});const g=function(){const a=$(".modelStart").val(),b=$(".modelEnd").val(),c=$(".analysisStart").val(),d=$(".analysisEnd").val();$.ajax({url:"/gateway",method:"GET",data:{buildingNumber:data[0][0].building_number,commodity:data[0][0].commodity_tag,meter:data[0][0].meter,trainStart:a,trainEnd:b,analysisStart:c,analysisEnd:d},error:function(a){504===a.status&&(g(),$(".overlayMessage").text("Server not responding, trying your search again. Please do not refresh the page")),502===a.status&&($("#overlay").fadeOut(),alert("No data was returned for your current search criteria. Please try selecting a different meter or date range"))}}).then(a=>{if(504===a.status||500===a.status)g(),$(".overlayMessage").text("Server not responding, trying your search again. Please do not refresh the page");else if(401===a.status)alert("You are not authorized");else{$(".displayData").show(),console.log(a),h=!0;const d=a.body.model.data.timestamp.indexOf($(".analysisStart").val());let e=a.body.model.data.predicted_value_lower_bound.slice(d),g=a.body.model.data.average_dry_bulb_temperature.slice(d),j=a.body.model.data.predicted_value_upper_bound.slice(d),k=a.body.model.data.raw_value.slice(d),l=a.body.model.data.timestamp.slice(d),m={},n={};$(".overlayMessage").text("Getting data, this will take a few seconds"),$("#overlay").fadeOut(),$(".baseTemp").html(a.body.model.base_temperature),$(".autoIgnored").html(parseFloat(a.body.model.missing_value.auto_ignored_percentage).toFixed(0)+"%"),$(".slope").html(parseFloat(a.body.model.slope).toFixed(2)),$(".intercept").html(parseFloat(a.body.model.intercept).toFixed(2)),$(".r2").html(parseFloat(a.body.model.max_train_r2).toFixed(2)),$(".stdDev").html(parseFloat(a.body.model.std.train).toFixed(2)),$(".meterVariable").html(`Variable: ${a.body.model.x.toUpperCase()}`),$(".currentMeter").text(data[0][0].meter),$(".currentBuilding").text(data[0][0].building_number),$(".currentCommodity").text(data[0][0].commodity_tag),$(".currentVariable").text(a.body.model.x),f(),g.forEach((a,b)=>m[a]=e[b]);var b=Object.keys(m).map(function(a){return[+a,m[a]]});b.sort(function(c,a){return c[0]-a[0]}),g.forEach((a,b)=>m[a]=j[b]);let o=Object.keys(m).map(function(a){return[+a,m[a]]});o.sort(function(c,a){return c[0]-a[0]}),g.forEach((a,b)=>{m[a]=k[b]}),console.log(m);let p=Object.keys(m).map(function(a){return[+a,m[a]]});p.sort(function(c,a){return c[0]-a[0]}),"W"===data[0][0].commodity_tag&&($("#hideIfWater").hide(),$("#fullWidth").attr("class","col-xxl-12"),$("#myChart2").css("height","400px"));const q={data:{datasets:[{type:"scatter",label:"Meter VS. Temp",data:p.map(b=>({x:b[0],y:parseFloat(b[1]).toFixed(0)})),backgroundColor:"#00FFFF",pointRadius:5},{type:"line",label:"High Limit",data:o.map(b=>({x:b[0],y:b[1]})),fill:!1,pointRadius:0,tension:.1,borderColor:"white"},{type:"line",label:"Low Limit",data:b.map(b=>({x:b[0],y:b[1]})),fill:!1,pointRadius:0,tension:.1,borderColor:"#ffcc66"}]},options:{plugins:{legend:{labels:{color:"white"}}},scales:{y:{beginAtZero:!0,ticks:{color:"white"},grid:{color:"black"}},x:{ticks:{color:"white"},grid:{color:"black"}}},onClick(a){const b=s.getElementsAtEventForMode(a,"nearest",{intersect:!0},!1),[{index:c}]=b;console.log(q.data.datasets[0].data[c].y);var d=$(".scroll"),e=$("#"+q.data.datasets[0].data[c].y);d.animate({scrollTop:e.offset().top-d.offset().top+d.scrollTop()-d.height()/2}),e.parent("tr").effect("highlight",{},3e3)}}};let r=document.getElementById("myChart").getContext("2d"),s=new Chart(r,q),t=document.getElementById("myChart3").getContext("2d"),u=new Chart(t,q);l.forEach((a,b)=>n[a]=k[b]);let v=Object.keys(n).map(function(a){return[a+"",n[a]]});v.sort(function(c,a){return c[0]-a[0]}),l.forEach((a,b)=>n[a]=j[b]);let w=Object.keys(n).map(function(a){return[a+"",n[a]]});w.sort(function(c,a){return c[0]-a[0]}),l.forEach((a,b)=>n[a]=e[b]);var c=Object.keys(n).map(function(a){return[a+"",n[a]]});c.sort(function(c,a){return c[0]-a[0]});const x={data:{datasets:[{type:"scatter",label:"Meter VS. Dates",data:v.map(b=>({x:b[0],y:parseFloat(b[1]).toFixed(0)})),pointRadius:5,backgroundColor:"#00FFFF"},{type:"line",label:"High Limit",data:w.map(b=>({x:b[0],y:b[1]})),fill:!1,pointRadius:0,borderColor:"white",tension:.1},{type:"line",label:"Low Limit",data:c.map(b=>({x:b[0],y:b[1]})),fill:!1,pointRadius:0,borderColor:"#ffcc66",tension:.1}]},options:{plugins:{legend:{labels:{color:"white"}}},scales:{x:{type:"time",time:{unit:"day"},ticks:{color:"white"},grid:{color:"black"}},y:{beginAtZero:!0,ticks:{color:"white"},grid:{color:"black"}}},onClick(a){const b=z.getElementsAtEventForMode(a,"nearest",{intersect:!0},!1),[{index:c}]=b;console.log(x.data.datasets[0].data[c].y);var d=$(".scroll"),e=$("#"+x.data.datasets[0].data[c].y);d.animate({scrollTop:e.offset().top-d.offset().top+d.scrollTop()-d.height()/2}),e.parent("tr").effect("highlight",{},3e3)}}};let y=document.getElementById("myChart2").getContext("2d"),z=new Chart(y,x),A=document.getElementById("myChart4").getContext("2d"),B=new Chart(A,x);$(function(){const b=a.body.model.data.timestamp.slice(d),c=a.body.model.data.average_dry_bulb_temperature.slice(d),e=a.body.model.data.degree_day.slice(d),f=a.body.model.data.raw_value.slice(d),g=a.body.model.data.predicted_value.slice(d),h=a.body.model.data.replacement_value.slice(d),i=a.body.model.data.replacement_reason.slice(d),j=a.body.model.data.replacement_notes.slice(d),k=a.body.model.data.predicted_value_lower_bound.slice(d),l=a.body.model.data.predicted_value_upper_bound.slice(d);b.map((a,b)=>{$(".tableBody").append(`
                    <tr>
                        <td class='position'><input class="form-check-input edit" name='edit' type="checkbox"></td>
                        <td class='date'>${a}</td>
                        <td>${c[b]}</td>
                        <td>${null===e[b]?"-":parseFloat(e[b]).toFixed(0)}</td>
                        <td id=${parseFloat(f[b]).toFixed(0)} class='meterReading'>${parseFloat(f[b]).toFixed(0)}</td>
                        <td class='expected'>${parseFloat(g[b]).toFixed(0)}</td>
                        <td >${null===h[b]?"-":parseFloat(h[b]).toFixed(0)}</td>
                        <td>${null===i[b]?"-":i[b]}</td>
                        <td>${null===j[b]?"-":j[b]}</td>
                        <td class="upperBound" style='display: none'>${parseFloat(l[b]).toFixed(0)}</td>
                        <td class="lowerBound" style='display: none'>${parseFloat(k[b]).toFixed(0)}</td>
                    </tr>`)}),$(".x").html(a.body.model.x.toUpperCase()),$(".tableData tbody tr").each(function(){let a=$(this).find(".meterReading").html(),b=$(this).find(".lowerBound").html(),c=$(this).find(".upperBound").html();parseInt(a,10)<parseInt(b,10)&&($(this).addClass("table-warning"),$(this).children("td:eq(0)").append(`<a href="#" class="warning" data-tool-tip="Low Limit: ${b}"><i class="fas fa-exclamation-circle fa-2x"></i></a>`)),parseInt(a,10)>parseInt(c,10)&&($(this).addClass("table-danger"),$(this).children("td:eq(0)").append(`<a href="#" class="warning" data-tool-tip="High Limit: ${c}"><i class="fas fa-exclamation-circle fa-2x"></i></a>`)),$(this).children("td:eq(4)").text()===$(this).next().children("td:eq(4)").text()&&($(this).addClass("table-primary"),$(this).next().addClass("table-primary"))})})}})};$("#reason").on("change",function(){e.removeAttr("disabled")}),e.click(function(){$("input:checkbox:checked",$(".tableData")).each(function(){replaceData.push({Date:$(this).closest("tr").find(".date").text(),Expected:$(this).closest("tr").find(".expected").text()})}).get();let a=$("#replace").is(":checked"),b=[],c=[],d=[],e=[];const f=$(".email").text().trim(),g=data[0][0].building_number,h=data[0][0].commodity_tag,i=data[0][0].meter;console.log(replaceData),0===replaceData.length?(alert("Please select at least one date"),$("#overlay").hide()):(!0===a?replaceData.forEach(function(a){""===$("#notes").val()?b.push(null):b.push($("#notes").val()),c.push($("#reason").val()),d.push(parseFloat(a.Expected)),e.push(a.Date)}):replaceData.forEach(function(a){""===$("#notes").val()?b.push(null):b.push($("#notes").val()),c.push($("#reason").val()),d.push(null),e.push(a.Date)}),console.log(e),console.log(b),console.log(c),console.log(d),$(".overlayMessage").text("Submitting Data. Please wait..."),$.ajax({url:"/postGateway",method:"POST",data:{analyst:f,building_number:g,commodity_tag:h,meter:i,timestamp:JSON.stringify(e),values:JSON.stringify(d),reason:JSON.stringify(c),notes:JSON.stringify(b)},error:function(a,b,c){console.log(c),400===a.status&&(alert("Invalid Request. Please try again."),$("#overlay").fadeOut()),504===a.status&&($("#overlay").fadeOut(),$(".edit").prop("checked",!1),alert("Server Error. Your data has been saved. Please hit the submit button again."))}}).then(a=>{console.log(a),$("#overlay").fadeOut(),$(".overlayMessage").text("Getting data, this will take a few seconds"),b=[],e=[],d=[],c=[],replaceData=[],$(".edit").prop("checked",!1),$("#replace").prop("checked",!1),$("#notes").val(""),$("#reason").val("Choose..."),$(".successAlert").append(`<div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Success!</strong> Your data has been successfully uploaded!
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>`),setTimeout(function(){$(".successAlert").fadeOut()},2e3)}))}),$(".logout").click(function(){!0===h&&i()});let h=!1;const i=()=>{let a=$(".autoIgnored").text(),b=a.substring(0,a.length-1);const c=$(".currentBuilding").text(),d=$(".currentMeter").text(),e=$(".currentCommodity").text(),f=$(".meterVariable").text(),g=$(".currentVariable").text();let h=$(".baseTemp").text();const i=+b,j=+$(".slope").text(),k=+$(".intercept").text(),l=+$(".r2").text(),m=+$(".stdDev").text(),n=$(".modelStart").val(),o=$(".modelEnd").val();if(h=""===h?null:+$(".baseTemp").text(),0===attributes.length||attributes[0].base_temperature!==h||attributes[0].intercept!==k||attributes[0].slope!==j||attributes[0].auto_ignored_percentage!==i||attributes[0].r2!==l||attributes[0].std!==m||attributes[0].train_start!==n||attributes[0].train_end!==o){const a=confirm(`Do you want to submit the current meter attributes for meter: ${$(".currentMeter").text()}

            \u2022 Variable: ${f}
            \u2022 Base Temp: ${h}
            \u2022 Auto Ignored: ${i}
            \u2022 Slope: ${j}
            \u2022 Intercept: ${k}
            \u2022 R-Squared: ${l}
            \u2022 Std Dev: ${m}`);!0===a&&$.ajax({type:"POST",url:"/postAttributes",data:{building_number:c,meter:d,commodity_tag:e,train_start:n,train_end:o,x:g,auto_ignored_percentage:i,base_temperature:0===h?null:h,r2:l,slope:j,intercept:k,std:m}}).then(function(a){console.log(a)})}}});